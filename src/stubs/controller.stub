<?php

namespace {{capNamespace}}\Controllers;

use {{rootNamespace}}Http\Requests;
use {{rootNamespace}}Http\Controllers\Controller;

use Illuminate\Http\Request;
use Carbon\Carbon;

use {{capNamespace}}\Models\{{capName}};
use {{capNamespace}}\Requests\StoreRequest;
use {{capNamespace}}\Requests\UpdateRequest;


class {{capName}}Controller extends Controller
{
    /**
     * constructor
     */
    public function __construct() {}

    /**
     * Display a listing of the resource.
     *
     * @return Response
     */
    public function index()
    {
        $resources = {{capName}}::paginate('15');
        return view('{{name}}::index', compact('resources'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return Response
     */
    public function create()
    {
        return view('{{name}}::create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @return Response
     */
    public function store(StoreRequest $request)
    {
        {{capName}}::create($request->all());        
        return redirect()->route('{{name}}.index')
            ->with( ['flash' => ['message' => "<i class='fa fa-check-square-o fa-1x'></i> Success! {{name}} created.", 'level' => "success"] ] );
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     *
     * @return Response
     */
    public function show($id)
    {
        $resource = {{capName}}::findOrFail($id);
        $show = "1";
        return view('{{name}}::edit', compact('resource', 'show') );
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     *
     * @return Response
     */
    public function edit($id)
    {
        $resource = {{capName}}::findOrFail($id);
        $show = "0";
        return view('{{name}}::edit', compact('resource', 'show') );
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  int  $id
     *
     * @return Response
     */
    public function update($id, UpdateRequest $request)
    {
        ${{name}} =  {{capName}}::findOrFail($id);      
        ${{name}}->update($request->all());        
        return redirect()->route('{{name}}.index')
            ->with( ['flash' => ['message' => "<i class='fa fa-check-square-o fa-1x'></i> Success! {{capName}} edited.", 'level' => "success"] ] );     
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     *
     * @return Response
     */
    public function destroy($id)
    {
        {{capName}}::destroy($id);
        return redirect()->route('{{name}}.index')
           ->with( ['flash' => ['message' => "<i class='fa fa-check-square-o fa-1x'></i> Success! {{capName}} deleted.", 'level' => "warning"] ] );     
    }

}
